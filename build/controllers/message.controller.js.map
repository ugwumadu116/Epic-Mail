{"version":3,"sources":["../../api/controllers/message.controller.js"],"names":["MessageController","getEmail","req","res","userMails","messageService","getUserEmails","userData","user","epicMail","length","Error","status","json","message","error","getUnreadEmail","getUnreadEmails","getSentEmail","getSentEmails","getAnEmail","id","params","messageId","parseInt","getSingleEmail","PostAnEmail","messageDetails","body","postEmail","deleteAnEmail","deleteSingleEmail"],"mappings":"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","sourcesContent":["import messageService from '../services/message.services';\r\n\r\nclass MessageController {\r\n  static async getEmail(req, res) {\r\n    try {\r\n      const userMails = await messageService\r\n        .getUserEmails(req.userData.user.epicMail);\r\n      if (userMails.length === 0) {\r\n        throw new Error('No mail found');\r\n      }\r\n      return res.status(200).json({\r\n        status: 200,\r\n        message: userMails,\r\n      });\r\n    } catch (error) {\r\n      return res.status(404).json({\r\n        status: 404,\r\n        message: error.message,\r\n      });\r\n    }\r\n  }\r\n\r\n  static async getUnreadEmail(req, res) {\r\n    try {\r\n      const userMails = await messageService\r\n        .getUnreadEmails(req.userData.user.epicMail);\r\n      if (userMails.length === 0) {\r\n        throw new Error('No unread mail found');\r\n      }\r\n      return res.status(200).json({\r\n        status: 200,\r\n        message: userMails,\r\n      });\r\n    } catch (error) {\r\n      return res.status(404).json({\r\n        status: 404,\r\n        message: error.message,\r\n      });\r\n    }\r\n  }\r\n\r\n  static async getSentEmail(req, res) {\r\n    try {\r\n      const userMails = await messageService\r\n        .getSentEmails(req.userData.user.epicMail);\r\n      if (userMails.length === 0) {\r\n        throw new Error('No sent mail found');\r\n      }\r\n      return res.status(200).json({\r\n        status: 200,\r\n        message: userMails,\r\n      });\r\n    } catch (error) {\r\n      return res.status(404).json({\r\n        status: 404,\r\n        message: error.message,\r\n      });\r\n    }\r\n  }\r\n\r\n  static async getAnEmail(req, res) {\r\n    try {\r\n      const { id } = req.params;\r\n      const messageId = parseInt(id, 10);\r\n      const userMails = await messageService\r\n        .getSingleEmail(req.userData.user.epicMail, messageId);\r\n      if (!userMails) {\r\n        throw new Error('No mesage found');\r\n      }\r\n      return res.status(200).json({\r\n        status: 200,\r\n        message: userMails,\r\n      });\r\n    } catch (error) {\r\n      return res.status(404).json({\r\n        status: 404,\r\n        message: error.message,\r\n      });\r\n    }\r\n  }\r\n\r\n  static async PostAnEmail(req, res) {\r\n    try {\r\n      const messageDetails = req.body;\r\n      const userMails = await messageService\r\n        .postEmail(req.userData.user.epicMail, messageDetails);\r\n      if (!userMails) {\r\n        throw new Error('Mail not sent');\r\n      }\r\n      return res.status(201).json({\r\n        status: 201,\r\n        message: userMails,\r\n      });\r\n    } catch (error) {\r\n      return res.status(400).json({\r\n        status: 400,\r\n        message: error.message,\r\n      });\r\n    }\r\n  }\r\n\r\n  static async deleteAnEmail(req, res) {\r\n    try {\r\n      const { id } = req.params;\r\n      const messageId = parseInt(id, 10);\r\n      const userMails = await messageService\r\n        .deleteSingleEmail(req.userData.user.epicMail, messageId);\r\n      if (!userMails) {\r\n        throw new Error('No mesage found');\r\n      }\r\n      return res.status(200).json({\r\n        status: 200,\r\n        message: 'Deleted successfully',\r\n      });\r\n    } catch (error) {\r\n      return res.status(404).json({\r\n        status: 404,\r\n        message: error.message,\r\n      });\r\n    }\r\n  }\r\n}\r\nexport default MessageController;\r\n"],"file":"message.controller.js"}