{"version":3,"sources":["../../api/middleware/userAuth.js"],"names":["dotenv","config","checkAuth","validate","req","res","next","token","headers","status","send","deceoded","jwt","verify","process","env","SECRET","userData","error","json","message"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEAA,gBAAOC,MAAP;;AAEA,MAAMC,SAAN,CAAgB;AACd,eAAaC,QAAb,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsC;AACpC,QAAI;AACF,YAAMC,KAAK,GAAGH,GAAG,CAACI,OAAJ,CAAY,cAAZ,CAAd;;AACA,UAAI,CAACD,KAAL,EAAY;AACVF,QAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iCAArB;AACD;;AACD,YAAMC,QAAQ,GAAG,MAAMC,sBAAIC,MAAJ,CAAWN,KAAX,EAAkBO,OAAO,CAACC,GAAR,CAAYC,MAA9B,CAAvB;;AACA,UAAIL,QAAJ,EAAc;AACZP,QAAAA,GAAG,CAACa,QAAJ,GAAeN,QAAf;AACAL,QAAAA,IAAI;AACL;AACF,KAVD,CAUE,OAAOY,KAAP,EAAc;AACdb,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBU,IAAhB,CAAqB;AACnBC,QAAAA,OAAO,EAAE;AADU,OAArB;AAGD;AACF;;AAjBa;;eAmBDlB,S","sourcesContent":["import jwt from 'jsonwebtoken';\r\nimport dotenv from 'dotenv';\r\n\r\ndotenv.config();\r\n\r\nclass checkAuth {\r\n  static async validate(req, res, next) {\r\n    try {\r\n      const token = req.headers['x-auth-token'];\r\n      if (!token) {\r\n        res.status(401).send('Access denied.No token provided');\r\n      }\r\n      const deceoded = await jwt.verify(token, process.env.SECRET);\r\n      if (deceoded) {\r\n        req.userData = deceoded;\r\n        next();\r\n      }\r\n    } catch (error) {\r\n      res.status(400).json({\r\n        message: 'Unauthorised invalid token',\r\n      });\r\n    }\r\n  }\r\n}\r\nexport default checkAuth;\r\n"],"file":"userAuth.js"}