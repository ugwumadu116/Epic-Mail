{"version":3,"sources":["../../api/middleware/userAuth.js"],"names":["dotenv","config","checkAuth","req","res","next","token","headers","status","send","jwt","verify","process","env","SECRET","deceoded","userData","json","message"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;AAEAA,gBAAOC,MAAP;;IAEMC,S;;;;;;;;;;;;+CACkBC,G,EAAKC,G,EAAKC,I;;;;;;;AAEtBC,gBAAAA,K,GAAQH,GAAG,CAACI,OAAJ,CAAY,cAAZ,C;;AACd,oBAAI,CAACD,KAAL,EAAY;AACVF,kBAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iCAArB;AACD;;;uBACsBC,sBAAIC,MAAJ,CAAWL,KAAX,EAAkBM,OAAO,CAACC,GAAR,CAAYC,MAA9B,C;;;AAAjBC,gBAAAA,Q;;AACN,oBAAIA,QAAJ,EAAc;AACZZ,kBAAAA,GAAG,CAACa,QAAJ,GAAeD,QAAf;AACAV,kBAAAA,IAAI;AACL;;;;;;;;AAEDD,gBAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBS,IAAhB,CAAqB;AACnBC,kBAAAA,OAAO,EAAE;AADU,iBAArB;;;;;;;;;;;;;;;;;;;;;eAMShB,S","sourcesContent":["import jwt from 'jsonwebtoken';\r\nimport dotenv from 'dotenv';\r\n\r\ndotenv.config();\r\n\r\nclass checkAuth {\r\n  static async validate(req, res, next) {\r\n    try {\r\n      const token = req.headers['x-auth-token'];\r\n      if (!token) {\r\n        res.status(401).send('Access denied.No token provided');\r\n      }\r\n      const deceoded = await jwt.verify(token, process.env.SECRET);\r\n      if (deceoded) {\r\n        req.userData = deceoded;\r\n        next();\r\n      }\r\n    } catch (error) {\r\n      res.status(400).json({\r\n        message: 'Unauthorised invalid token',\r\n      });\r\n    }\r\n  }\r\n}\r\nexport default checkAuth;\r\n"],"file":"userAuth.js"}